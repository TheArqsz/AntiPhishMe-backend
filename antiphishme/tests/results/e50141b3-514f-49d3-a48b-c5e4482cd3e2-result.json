{"name": "test_verify_by_cert_hole_wrong_data", "status": "passed", "description": "\n    Test endpoint \"/verify/by_cert_hole\"\n\n    Send wrong data and except error.\n    ", "steps": [{"name": "[STEP] POST /verify/by_cert_hole", "status": "passed", "start": 1590505754069, "stop": 1590505754069}, {"name": "[STEP] Check status code", "status": "passed", "steps": [{"name": "Assert real \"400\" equal to expected \"400\"", "status": "passed", "steps": [{"name": "Real value is: 400", "status": "passed", "start": 1590505754077, "stop": 1590505754077}, {"name": "Expected value is: 400", "status": "passed", "start": 1590505754077, "stop": 1590505754077}], "start": 1590505754077, "stop": 1590505754077}], "start": 1590505754077, "stop": 1590505754077}, {"name": "[STEP] Check if dict contains given key - \"detail\"", "status": "passed", "steps": [{"name": "Assert {'detail': \"'url' is a required property\", 'status': 400, 'title': 'Bad Request', 'type': 'about:blank'} contains detail", "status": "passed", "steps": [{"name": "Key is: detail", "status": "passed", "start": 1590505754078, "stop": 1590505754078}, {"name": "Dictionary is: {'detail': \"'url' is a required property\", 'status': 400, 'title': 'Bad Request', 'type': 'about:blank'}", "status": "passed", "start": 1590505754078, "stop": 1590505754078}], "start": 1590505754078, "stop": 1590505754078}], "start": 1590505754078, "stop": 1590505754078}, {"name": "[STEP] Check if item \"detail\" is equal to \"'url' is a required property\"", "status": "passed", "steps": [{"name": "Assert real \"'url' is a required property\" equal to expected \"'url' is a required property\"", "status": "passed", "steps": [{"name": "Real value is: 'url' is a required property", "status": "passed", "start": 1590505754078, "stop": 1590505754079}, {"name": "Expected value is: 'url' is a required property", "status": "passed", "start": 1590505754079, "stop": 1590505754079}], "start": 1590505754078, "stop": 1590505754079}], "start": 1590505754078, "stop": 1590505754079}, {"name": "[STEP] Check if dict contains given key - \"title\"", "status": "passed", "steps": [{"name": "Assert {'detail': \"'url' is a required property\", 'status': 400, 'title': 'Bad Request', 'type': 'about:blank'} contains title", "status": "passed", "steps": [{"name": "Key is: title", "status": "passed", "start": 1590505754079, "stop": 1590505754080}, {"name": "Dictionary is: {'detail': \"'url' is a required property\", 'status': 400, 'title': 'Bad Request', 'type': 'about:blank'}", "status": "passed", "start": 1590505754080, "stop": 1590505754080}], "start": 1590505754079, "stop": 1590505754081}], "start": 1590505754079, "stop": 1590505754081}, {"name": "[STEP] Check if item \"title\" is equal to \"Bad Request\"", "status": "passed", "steps": [{"name": "Assert real \"Bad Request\" equal to expected \"Bad Request\"", "status": "passed", "steps": [{"name": "Real value is: Bad Request", "status": "passed", "start": 1590505754082, "stop": 1590505754083}, {"name": "Expected value is: Bad Request", "status": "passed", "start": 1590505754084, "stop": 1590505754084}], "start": 1590505754081, "stop": 1590505754084}], "start": 1590505754081, "stop": 1590505754085}], "attachments": [{"name": "log", "source": "93c98363-bd14-48f6-a36b-c603d9a7c756-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "d304b6c3-db2d-4d29-8cab-d669efcc8e96-attachment.txt", "type": "text/plain"}], "start": 1590505754069, "stop": 1590505754085, "uuid": "b2b9f919-61f4-4078-90cc-d657f7228ad7", "historyId": "d3ca5e1f7a4114250e610f841d7495ba", "testCaseId": "246f0cb2c524d6f2b275fd177d7d4a5a", "fullName": "functional.verify.endpoint_by_certhole_test.Tests#test_verify_by_cert_hole_wrong_data", "labels": [{"name": "epic", "value": "Verify"}, {"name": "subSuite", "value": "CertHole"}, {"name": "parentSuite", "value": "Functional"}, {"name": "suite", "value": "Verify"}, {"name": "host", "value": "arek-pc"}, {"name": "thread", "value": "279913-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "functional.verify.endpoint_by_certhole_test"}]}