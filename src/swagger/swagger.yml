swagger: "2.0"
info:
  description: This is the swagger specs for phishing detection API project
  version: "0.0.3"
  title: Phishing API backend
produces:
  - application/json

host: {{ host }}

tags:
  - name: "server"
    description: "Server and DB related enpoints"
  - name: "details"
    description: "Get details from provided services"
  - name: "verify"
    description: "Verify given variable with given services"

paths:
  /verify/all:
    post:
      operationId: api.verification.verify_by_all
      tags:
      - verify
      summary: Checks url's phishing status
      description: When given a url, checks if it is phishing by querying multiple validators and returns proper response
      consumes:
        - application/json
      parameters:
        - name: url_body
          in: body
          description: URL to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
          schema:
            $ref: '#/definitions/Verify'
        400:
          description: Bad request (eg. wrong URL)

  /verify/by_cert_hole:
    post:
      operationId: api.verification.verify_by_cert_hole
      tags:
      - verify
      summary: Checks url's phishing status in hole.cert.pl
      description: When given a url, checks if it is phishing by querying hole.cert.pl and returns proper response
      consumes:
        - application/json
      parameters:
        - name: url_body
          in: body
          description: URL to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
          schema:
            $ref: '#/definitions/Verify'
        400:
          description: Bad request (eg. wrong URL)

  /details/ip:
    post:
      operationId: api.details.get_ip_details
      tags:
      - details
      summary: Returns details for IP
      description: When given an ip, returns it's details such as country or ASN
      parameters:
        - name: ip_body
          in: body
          description: ip for which details will be returned
          required: true
          schema:
            type: object
            properties:
              ip:
                type: string     
      responses:
        200:
          description: IP's details
        400:
          description: Bad request (eg. wrong IP)

  /details/ip_by_url:
    post:
      operationId: api.details.get_ip_details_by_url
      tags:
      - details
      summary: Returns IP details for given url
      description: When given an url, returns it's IP details such as country or ASN
      parameters:
        - name: url_body
          in: body
          description: url for which ip details will be returned
          required: true
          schema:
            type: object
            properties:
              url:
                type: string     
      responses:
        200:
          description: URL's IP's details
          schema:
            $ref: '#/definitions/DetailsIPByDomain'
        400:
          description: Bad request (eg. wrong URL)

  /details/urlscan:
    post:
      operationId: api.details.get_urlscan_details
      tags:
      - details
      summary: Returns results from urlscan
      description: When given an url, checks in urlscan and returns details
      parameters:
        - name: url_body
          in: body
          description: url for which urlscan details will be returned
          required: true
          schema:
            type: object
            properties:
              url:
                type: string     
      responses:
        200:
          description: Domain's details from urlscan
          schema:
            $ref: '#/definitions/DetailsByUrlscan'
        400:
          description: Bad request (eg. wrong URL)
        401:
          description: Unauthorized (authorization error at urlscan.io)

  /details/safebrowsing:
    post:
      operationId: api.details.get_sfbrowsing_details
      tags:
      - details
      summary: Returns results from safebrowsing
      description: When given an url, checks in safebrowsing and returns details
      parameters:
        - name: url_body
          in: body
          description: url for which safebrowsing details will be returned
          required: true
          schema:
            type: object
            properties:
              url:
                type: string     
      responses:
        200:
          description: URL's details from safebrowsing
          schema:
            $ref: '#/definitions/DetailsBySafe'
        400:
          description: Bad request (eg. wrong URL)
        401:
          description: Unauthorized (authorization error at safebrowsing)
  

  /details/crtsh:
    post:
      operationId: api.details.get_crtsh_details
      tags:
      - details
      summary: Returns results from crtsh
      description: When given an url, checks in safebrowsing and returns details
      parameters:
        - name: url_body
          in: body
          description: url for which crtsh details will be returned
          required: true
          schema:
            type: object
            properties:
              url:
                type: string     
      responses:
        200:
          description: Domain's details from crtsh
          schema:
            $ref: '#/definitions/DetailsCrtSh'
        400:
          description: Bad request (eg. wrong URL)

  /details/whois:
    post:
      operationId: api.details.get_whois_details
      tags:
      - details
      summary: Returns results from whois
      description: When given an url, checks in whois and returns details
      parameters:
        - name: url_body
          in: body
          description: url for which whois details will be returned
          required: true
          schema:
            type: object
            properties:
              url:
                type: string     
      responses:
        200:
          description: URL's details from whois
          schema:
            $ref: '#/definitions/DetailsByWhois'
        400:
          description: Bad request (eg. wrong URL)

  /details/levenstein:
    post:
      operationId: api.details.get_levenstein_details
      tags:
      - details
      summary: Returns results from levenstein calculations
      description: When given an url, calculates it's levenstein distance and if matched - return details
      parameters:
        - name: url_body
          in: body
          description: url for which levenstein would be calculated
          required: true
          schema:
            type: object
            properties:
              url:
                type: string     
      responses:
        200:
          description: URL's details from levenstein
          schema:
            $ref: '#/definitions/DetailsByLevenstein'
        400:
          description: Bad request (eg. wrong URL)

  /details/keywords:
    post:
      operationId: api.details.get_keyword_details
      tags:
      - details
      summary: Returns results from matched keywords
      description: When given an url, check matched keywords and if matched - return details
      parameters:
        - name: url_body
          in: body
          description: url for which keywords would be compared
          required: true
          schema:
            type: object
            properties:
              url:
                type: string     
      responses:
        200:
          description: URL's details from keywords
          schema:
            $ref: '#/definitions/DetailsByKeyword'
        400:
          description: Bad request (eg. wrong URL)

  /verify/by_levenstein:
    post:
      operationId: api.verification.verify_by_levenstein
      tags:
      - verify
      summary: Check if phishing by calculating levenstein's distance
      description: When given an url, checks if it is phishing by calculating it's levenstein distance and returns proper response
      parameters:
        - name: url_body
          in: body
          description: url to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
          schema:
            $ref: '#/definitions/Verify'
        400:
          description: Bad request (eg. wrong URL)

  /verify/by_entropy:
    post:
      operationId: api.verification.verify_by_entropy
      tags:
      - verify
      summary: Check if phishing by calculating entropy
      description: When given an url, checks if it is phishing by calculating it's entropy and returns proper response
      parameters:
        - name: url_body
          in: body
          description: url to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
          schema:
            $ref: '#/definitions/Verify'
        400:
          description: Bad request (eg. wrong URL)

  /server/health:
    get:
      operationId: api.main.health
      tags:
      - server
      summary: Returns status of server
      responses:
        200:
          description: Server's status
          schema:
            $ref: '#/definitions/ServerHealth'

  /server/create_db:
    get:
      operationId: api.main.create_db
      tags:
      - server
      summary: Creates database
      responses:
        200:
          description: Database's status
        401:
          description: Unauthorized
      security:
        - api_key: []

  /verify/by_sfbrowsing:
    post:
      operationId: api.verification.verify_by_sfbrowsing
      tags:
      - verify
      summary: Check if phishing in safebrowsing
      description: When given a url, checks if it is phishing by connecting to safebrowsing and returns proper response
      parameters:
        - name: url_body
          in: body
          description: url to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
          schema:
            $ref: '#/definitions/Verify'
        400:
          description: Bad request (eg. wrong URL)
        401:
          description: Unauthorized (authorization error at safebrowsing)

  /verify/by_urlscan:
    post:
      operationId: api.verification.verify_by_urlscan
      tags:
      - verify
      summary: Check if phishing in urlscan
      description: When given a url, checks if it is phishing by connecting to urlscan and returns proper response
      parameters:
        - name: url_body
          in: body
          description: url to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
          schema:
            $ref: '#/definitions/Verify'
        400:
          description: Bad request (eg. wrong URL)
        401:
          description: Unauthorized (authorization error at urlscan)


  /verify/by_crt:
    post:
      operationId: api.verification.verify_by_crt
      tags:
      - verify
      summary: Check if phishing in crt.sh
      description: When given a url, checks if it is phishing by connecting to crt.sh and returns proper response
      parameters:
        - name: url_body
          in: body
          description: url to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
          schema:
            $ref: '#/definitions/Verify'
        400:
          description: Bad request (eg. wrong URL)

  /verify/by_keywords:
    post:
      operationId: api.verification.verify_by_keywords
      tags:
      - verify
      summary: Check if phishing by checking keywords' match
      description: When given a url, checks if it is phishing by keywords' match and returns proper response
      parameters:
        - name: url_body
          in: body
          description: url to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
          schema:
            $ref: '#/definitions/Verify'
        400:
          description: Bad request (eg. wrong URL)

  /verify/by_whois:
    post:
      operationId: api.verification.verify_by_whois
      tags:
      - verify
      summary: Check if phishing by connecting to whois
      description: When given a url, checks if it is phishing by connecting to whois and returns proper response
      parameters:
        - name: url_body
          in: body
          description: url to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
          schema:
            $ref: '#/definitions/Verify'
        400:
          description: Bad request (eg. wrong URL)

  /server/add_keyword:
    post:
      operationId: api.main.add_keyword
      tags:
      - server
      summary: Adds keyword
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - in: formData
          name: keyword
          type: string
          required: true 
          description: A keyword to be added
      responses:
        200:
          description: Status
          schema:
            $ref: '#/definitions/ServerAddKeyword'
        400:
          description: Bad request (eg. keyword too short)
        401:
          description: Unauthorized
      security:
        - api_key: []
        
definitions:
  ServerHealth:
    type: object
    properties:
      db_status:
        type: string
        description: Database status.
      server_status:
        type: string
        description: Server status.
  ServerAddKeyword:
    type: object
    properties:
      status:
        type: string
        description: Action's status.
  Verify:
    type: object
    properties:
      status:
        type: string
        description: Given value's validation  
  DetailsCrtSh:
    type: object
    properties:
      details:
        type: object
        description: Given value's details
        properties:
          caid:
            type: integer
            description: Certificate's id
          registered_at:
            type: string
            format: dateTime
            description: Certificate's date of registration
          subject:
            type: object
            description: Cert's subject
            properties:
              org_name:
                type: string
                description: Subject's organization name
              country:
                type: string
                description: Subject's country
          issuer:
            type: object
            description: Cert's issuer
            properties:
              common_name: 
                type: string
                description: Issuer's common name
          multi_dns_amount:
            type: integer
            description: Amount of domains registered with the same cert
  DetailsIPByDomain:
    type: object
    properties:
      details:
        type: object
        description: Given value's details
        properties:
          country:
            type: string
            description: Domain's IP's country
          ip:
            type: string
            description: Domain's IP
          asn:
            type: string
            description: Domain's IP's ASN
  DetailsByUrlscan:
    type: object
    properties:
      details:
        type: object
        description: Given value's details
        properties:
          domain:
            type: string
            description: Domain
          ip:
            type: string
            description: Domain's IP
          country:
            type: string
            description: Domain's country
          server:
            type: string
            description: Domain's type of server
          webApps:
            type: array
            description: Web apps used at website
            items:
              type: string
          no_of_requests:
            type: integer
            description: Number of requests sent by website when entered
          ads_blocked:
            type: integer
            description: Amount of ads blocked
          https_requests:
            type: string
            description: Percentage of https requests sent by website
          ipv6:
            type: string
            description: Percentage of ipv6 requests sent by website
          unique_country_count:
            type: integer
            description: Amount of countries which ip's website is requesting
          malicious:
            type: boolean
            description: Verdict whether domain is malicious/phishing
          malicious_requests:
            type: integer
            description: Amount of malicious requests
          pointed_domains:
            type: integer
            description: Amount of third-party domains requested by website
  DetailsByWhois:
    type: object
    properties:
      details:
        type: object
        description: Given value's details
        properties:
          registrar:
            type: string
            description: Subject that registered Certificate
          creation_date:
            type: string
            format: dateTime
            description: Date when certificate was added to cert.sh database
          name:
            type: string
          org:
            type: string
          country:
            type: string
            description: Certificate's country
  DetailsBySafe:
    type: object
    properties:
      details:
        type: object
        description: Given value's details
        properties:
          url:
            type: string
            description: Given URL
          malicious:
            type: boolean
            description: Verdict whether url is malicious/phishing
  DetailsByLevenstein:
    type: object
    properties:
      details:
        type: object
        description: Given value's details
        properties:
          matched_keyword:
            type: string
            description: Matched levenstein keyword
          levenstein_distance:
            type: integer
            description: Levenstein distance
  DetailsByKeyword:
    type: object
    properties:
      details:
        type: object
        description: Given value's details
        properties:
          matched_keyword:
            type: string
            description: Matched keyword

securityDefinitions:
  api_key:
    type: apiKey
    in: header
    name: X-API-Key
    x-apikeyInfoFunc: api.security.verify_api