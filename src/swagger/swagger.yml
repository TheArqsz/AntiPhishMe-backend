swagger: "2.0"
info:
  description: This is the swagger specs for phishing detection API project
  version: "0.0.2"
  title: Phishing API backend
produces:
  - application/json

host: {{ host }}

tags:
  - name: "server"
    description: "Server and DB related enpoints"
  - name: "details"
    description: "Get details from provided services"
  - name: "verify"
    description: "Verify given variable with given services"

paths:
  /verify/all:
    post:
      operationId: api.verification.verify_by_all
      tags:
      - verify
      summary: Checks url's phishing status
      description: When given a url, checks if it is phishing by querying multiple validators and returns proper response
      consumes:
        - application/json
      parameters:
        - name: url_body
          in: body
          description: URL to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
        400:
          description: Bad request (eg. wrong URL)

  /verify/by_cert_hole:
    post:
      operationId: api.verification.verify_by_cert_hole
      tags:
      - verify
      summary: Checks url's phishing status in hole.cert.pl
      description: When given a url, checks if it is phishing by querying hole.cert.pl and returns proper response
      consumes:
        - application/json
      parameters:
        - name: url_body
          in: body
          description: URL to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
        400:
          description: Bad request (eg. wrong URL)

  /details/ip:
    post:
      operationId: api.details.get_ip_details
      tags:
      - details
      summary: Returns details for IP
      description: When given an ip, returns it's details such as country or ASN
      parameters:
        - name: ip_body
          in: body
          description: ip for which details will be returned
          required: true
          schema:
            type: object
            properties:
              ip:
                type: string     
      responses:
        200:
          description: IP's details
        400:
          description: Bad request (eg. wrong IP)

  /details/ip_by_url:
    post:
      operationId: api.details.get_ip_details_by_url
      tags:
      - details
      summary: Returns IP details for given url
      description: When given an url, returns it's IP details such as country or ASN
      parameters:
        - name: url_body
          in: body
          description: url for which ip details will be returned
          required: true
          schema:
            type: object
            properties:
              url:
                type: string     
      responses:
        200:
          description: URL's IP's details
        400:
          description: Bad request (eg. wrong URL)

  /details/urlscan:
    post:
      operationId: api.details.get_urlscan_details
      tags:
      - details
      summary: Returns results from urlscan
      description: When given an url, checks in urlscan and returns details
      parameters:
        - name: url_body
          in: body
          description: url for which urlscan details will be returned
          required: true
          schema:
            type: object
            properties:
              url:
                type: string     
      responses:
        200:
          description: Domain's details from urlscan
        400:
          description: Bad request (eg. wrong URL)
        401:
          description: Unauthorized (authorization error at urlscan.io)

  /details/safebrowsing:
    post:
      operationId: api.details.get_sfbrowsing_details
      tags:
      - details
      summary: Returns results from safebrowsing
      description: When given an url, checks in safebrowsing and returns details
      parameters:
        - name: url_body
          in: body
          description: url for which safebrowsing details will be returned
          required: true
          schema:
            type: object
            properties:
              url:
                type: string     
      responses:
        200:
          description: URL's details from safebrowsing
        400:
          description: Bad request (eg. wrong URL)
        401:
          description: Unauthorized (authorization error at safebrowsing)
  

  /details/crtsh:
    post:
      operationId: api.details.get_crtsh_details
      tags:
      - details
      summary: Returns results from crtsh
      description: When given an url, checks in safebrowsing and returns details
      parameters:
        - name: url_body
          in: body
          description: url for which crtsh details will be returned
          required: true
          schema:
            type: object
            properties:
              url:
                type: string     
      responses:
        200:
          description: Domain's details from crtsh
        400:
          description: Bad request (eg. wrong URL)

  /details/whois:
    post:
      operationId: api.details.get_whois_details
      tags:
      - details
      summary: Returns results from whois
      description: When given an url, checks in whois and returns details
      parameters:
        - name: url_body
          in: body
          description: url for which whois details will be returned
          required: true
          schema:
            type: object
            properties:
              url:
                type: string     
      responses:
        200:
          description: URL's details from whois
        400:
          description: Bad request (eg. wrong URL)

  /verify/by_levenstein:
    post:
      operationId: api.verification.verify_by_levenstein
      tags:
      - verify
      summary: Check if phishing by calculating levenstein's distance
      description: When given an url, checks if it is phishing by calculating it's levenstein distance and returns proper response
      parameters:
        - name: url_body
          in: body
          description: url to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
        400:
          description: Bad request (eg. wrong URL)

  /verify/by_entropy:
    post:
      operationId: api.verification.verify_by_entropy
      tags:
      - verify
      summary: Check if phishing by calculating entropy
      description: When given an url, checks if it is phishing by calculating it's entropy and returns proper response
      parameters:
        - name: url_body
          in: body
          description: url to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
        400:
          description: Bad request (eg. wrong URL)

  /server/health:
    get:
      operationId: api.main.health
      tags:
      - server
      summary: Returns status of server
      responses:
        200:
          description: Server's status

  /server/create_db:
    get:
      operationId: api.main.create_db
      tags:
      - server
      summary: Creates database
      responses:
        200:
          description: Database's status
      security:
        - api_key: []

  /verify/by_sfbrowsing:
    post:
      operationId: api.verification.verify_by_sfbrowsing
      tags:
      - verify
      summary: Check if phishing in safebrowsing
      description: When given a url, checks if it is phishing by connecting to safebrowsing and returns proper response
      parameters:
        - name: url_body
          in: body
          description: url to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
        400:
          description: Bad request (eg. wrong URL)
        401:
          description: Unauthorized (authorization error at safebrowsing)

  /verify/by_urlscan:
    post:
      operationId: api.verification.verify_by_urlscan
      tags:
      - verify
      summary: Check if phishing in urlscan
      description: When given a url, checks if it is phishing by connecting to urlscan and returns proper response
      parameters:
        - name: url_body
          in: body
          description: url to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
        400:
          description: Bad request (eg. wrong URL)
        401:
          description: Unauthorized (authorization error at urlscan)


  /verify/by_crt:
    post:
      operationId: api.verification.verify_by_crt
      tags:
      - verify
      summary: Check if phishing in crt.sh
      description: When given a url, checks if it is phishing by connecting to crt.sh and returns proper response
      parameters:
        - name: url_body
          in: body
          description: url to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
        400:
          description: Bad request (eg. wrong URL)

  /verify/by_keywords:
    post:
      operationId: api.verification.verify_by_keywords
      tags:
      - verify
      summary: Check if phishing by checking keywords' match
      description: When given a url, checks if it is phishing by keywords' match and returns proper response
      parameters:
        - name: url_body
          in: body
          description: url to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
        400:
          description: Bad request (eg. wrong URL)

  /verify/by_whois:
    post:
      operationId: api.verification.verify_by_whois
      tags:
      - verify
      summary: Check if phishing by connecting to whois
      description: When given a url, checks if it is phishing by connecting to whois and returns proper response
      parameters:
        - name: url_body
          in: body
          description: url to be checked
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
      responses:
        200:
          description: URL's verdict
        400:
          description: Bad request (eg. wrong URL)

  /server/add_keyword:
    post:
      operationId: api.main.add_keyword
      tags:
      - server
      summary: Adds keyword
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - in: formData
          name: keyword
          type: string
          required: true 
          description: A keyword to be added
      responses:
        200:
          description: status
        401:
          description: Unauthorized
      security:
        - api_key: []

securityDefinitions:
  api_key:
    type: apiKey
    in: header
    name: X-API-Key
    x-apikeyInfoFunc: api.security.verify_api